package main

import "fmt"

// 位运算符（二进制相关的,只需要作为了解） 假定 A 为60，B 为13
// A 60   0011 1100
// B 13   0000 1101
func main() {
	// 0 false 1 true
	var a int = 60
	var b int = 13
	// & 按位与 两个都是真，结果为真
	// 0011 1100
	// 0000 1101
	// ---------
	// 0000 1100
	fmt.Println(a & b) // 60&13 = 12 (二进制转换为10进制的结果)

	// | 按位或 如果都是假的结果才为假0,如果有一个1则为1
	// 0011 1100
	// 0000 1101
	// ---------
	// 0011 1101
	fmt.Println(a | b) // 61

	// ^ 按位异或， 不同则为1.相同就为0
	// 0011 1100
	// 0000 1101
	// ---------
	// 0011 0001
	fmt.Println(a ^ b) // 49

	// &^ 位清空，对于b上的每个数值，如果为0，则取a对应位上的数值;如果为1，则取0.
	// 0011 1100   a
	// 0000 1101   b
	// ---------
	// 0011 0000
	fmt.Println(a &^ b) // 48

	// 左移 << n 、右移 >> n 移动的位数
	// 移动完毕后，需要补位（左移补右边，相反一样）
	// 0011 1100   a
	// 1111 0000   移动完毕 需要补位
	// 60 -> 240
	fmt.Println(a << 2) // 240

	//     0000 1111
	fmt.Println(a >> 2) // 15
}
